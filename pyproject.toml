[project]
name = "human-ai-orchestrator"
version = "1.0.0"
description = "A modular AI system that combines LangGraph workflows with human-in-the-loop capabilities"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Hybrid AI System Team", email = "team@example.com"}
]
dependencies = [
    # Core LangGraph and LangChain dependencies
    "langgraph>=0.2.0",
    "langchain>=0.2.0",
    "langchain-core>=0.2.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    # Local LLM support
    "langchain-community>=0.2.0",
    "llama-cpp-python>=0.2.0",
    "ctransformers>=0.2.0",
    # LangSmith for tracing and monitoring
    "langsmith>=0.1.0",
    # Database and data handling
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    # Configuration and utilities
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    # Additional utilities
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "loguru>=0.7.0",
    "ipykernel>=6.30.0",
    "ipywidgets>=8.1.7",
    "jupyter-contrib-nbextensions>=0.7.0",
    "ruamel-yaml>=0.18.14",
    "streamlit>=1.28.0",
    "gradio>=5.40.0",
    "langchain-google-genai>=2.1.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
gpu = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
    "bitsandbytes>=0.39.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.2",
]
